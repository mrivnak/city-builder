name: Create Release Action

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build ${{ matrix.platform.os }} Release
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        platform: [ 
          {runner: ubuntu-latest, os: Linux},
          {runner: windows-latest, os: Windows}
        ]
    runs-on: ${{ matrix.platform.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.platform.runner == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true

      - name: Set version
        run: |
          pwsh Set-Version.ps1 ${{ github.ref_name }} ./Cargo.toml

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Package release artifact
        run: |
          mkdir -p release
          cp target/release/citybuilder{,.exe} release/
          cp -rv assets release/
          tar -czf release/citybuilder-${{ github.ref_name }}-${{ matrix.platform.os}}-x86_64.tar.gz -C release .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: release

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release
          path: release

      - name: Parse Semver
        id: parse-semver
        uses: madhead/semver-utils@1.6.0
        with:
          version: ${{ github.ref_name }}

      - name: Check prerelease
        id: check-prerelease
        run: |
          pip3 install semver
          python3 -c "import semver; print('prerelease=true') if semver.Version.parse('${{ github.ref_name }}'.replace('v', '')).prerelease else print('prerelease=false')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          prerelease: ${{ steps.check-prerelease.outputs.prerelease }}
          generate_release_notes: true
          files: |
            release/citybuilder-${{ github.ref_name }}-*.tar.gz